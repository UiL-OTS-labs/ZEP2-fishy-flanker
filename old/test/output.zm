/******************************************************************************\
FILE:           output.zm
AUTHOR:         Theo Veenker (UiL-OTS) <T.J.G.Veenker@uu.nl>
ADAPTED BY:     -

DESCRIPTION:

Defines the formats of output table(s).


HISTORY:
2011-10-26 TV   Created.

\******************************************************************************/


// Test phase output table record, defining what is to be logged for
// each trial.
record TestOutput
{
    int         block_nr;
    int         trial_nr;       // trial number
    int         id;             // item id
    FlankerType congruence;
    int         rt;
    DirectionType selected_side;
    DirectionType expected_side;
    int         correct;
}

TestOutput[] prac_output = {};

// Appends one row of data to test phase output table.
void prac_output_append(TestOutput data)
{
    expdb.add_trial_data_record(namespace_name, "1", "TestResults");

    expdb.set_trial_data_int_field("trialnum", data.trial_nr);
    expdb.set_trial_data_int_field("id", data.id);
    expdb.set_trial_data_enum_field("congruence", string(data.congruence));
    expdb.set_trial_data_int_field("rt", data.rt);
    expdb.set_trial_data_enum_field("selected_side", string(data.selected_side));
    expdb.set_trial_data_enum_field("expected_side", string(data.expected_side));
    expdb.set_trial_data_int_field("correct", data.correct);

    prac_output.size = prac_output.size + 1;
    prac_output[prac_output.size - 1] = data;
}

int calc_num_practice_correct()
{
    int num_correct = 0;
    int i = 0;

    while (i < prac_output.size)
    {
        if (prac_output[i].correct)
            num_correct += 1;
        i++;
    }
    
    return num_correct;
}

void reset_practice_items()
{
    prac_output.size = 0;
}


//------------------------------------------------------------------------------

// Appends one row of data to test phase output table.
void test_output_append(TestOutput data)
{
    expdb.add_trial_data_record(namespace_name, "1", "TestResults");

    expdb.set_trial_data_int_field("trialnum", data.trial_nr);
    expdb.set_trial_data_int_field("id", data.id);
    expdb.set_trial_data_enum_field("congruence", string(data.congruence));
    expdb.set_trial_data_int_field("rt", data.rt);
    expdb.set_trial_data_enum_field("selected_side", string(data.selected_side));
    expdb.set_trial_data_enum_field("expected_side", string(data.expected_side));
    expdb.set_trial_data_int_field("correct", data.correct);
}


